{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(changeNickname),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowers),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowings),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(removeFollower),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchChangeNickname),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadFollowers),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadFollowings),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchremoveFollower),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE } from '../reducers/user';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data: data\n  };\n}; // logout action\n\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS // data: result.data,\n\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI(data) {\n  // signup api는 generator가 아님에 주의.\n  return axios.post('/user', data); // 데이터가 routes/user.js에서 req.body에 해당함.\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          console.log(result);\n          _context3.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction followAPI(data) {\n  // signup api는 generator가 아님에 주의.\n  return axios.patch(\"/user/\".concat(data, \"/follow\"));\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: FOLLOW_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction unfollowAPI(data) {\n  // signup api는 generator가 아님에 주의.\n  return axios[\"delete\"](\"/user/\".concat(data, \"/unfollow\"));\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: UNFOLLOW_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction loadMyInfo() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(loadMyInfoAPI);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction changeNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function changeNickname$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(changeNicknameAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data // data: result.data,\n\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: CHANGE_NICKNAME_FAILURE // data: err.response.data,\n\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction loadFollowersAPI() {\n  return axios.get('/user/followers');\n}\n\nfunction loadFollowers() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(loadFollowersAPI);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data // data: result.data,\n\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 13;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: LOAD_FOLLOWERS_FAILURE // data: err.response.data,\n\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction loadFollowingsAPI() {\n  return axios.get('/user/followings');\n}\n\nfunction loadFollowings() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(loadFollowingsAPI);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data // data: result.data,\n\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: LOAD_FOLLOWINGS_FAILURE // data: err.response.data,\n\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction removeFollowerAPI(data) {\n  return axios[\"delete\"](\"/user/follower/\".concat(data));\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context10.sent;\n          _context10.next = 6;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data // data: result.data,\n\n          });\n\n        case 6:\n          _context10.next = 13;\n          break;\n\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n          _context10.next = 13;\n          return put({\n            // put은 dispatch와 거의 같음.\n            type: REMOVE_FOLLOWER_FAILURE // data: err.response.data,\n\n          });\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 8]]);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n} // take의 치명적 단점은 한 번 밖에 listend을 안한다는 것. --> 그래서 while true로 감쌈. or takeEvery 사용\n\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchChangeNickname() {\n  return _regeneratorRuntime.wrap(function watchChangeNickname$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchloadFollowers() {\n  return _regeneratorRuntime.wrap(function watchloadFollowers$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchloadFollowings() {\n  return _regeneratorRuntime.wrap(function watchloadFollowings$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n\nfunction watchremoveFollower() {\n  return _regeneratorRuntime.wrap(function watchremoveFollower$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return all([fork(watchremoveFollower), fork(watchloadFollowers), fork(watchloadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/sagas/user.js"],"names":["logIn","logOut","signUp","follow","unfollow","loadMyInfo","changeNickname","loadFollowers","loadFollowings","removeFollower","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","watchChangeNickname","watchloadFollowers","watchloadFollowings","watchremoveFollower","userSaga","all","fork","takeLatest","delay","put","call","axios","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","loginRequestAction","data","type","logoutRequestAction","logInAPI","post","action","result","error","response","logOutAPI","signUpAPI","console","log","followAPI","patch","unfollowAPI","loadMyInfoAPI","get","changeNicknameAPI","nickname","loadFollowersAPI","loadFollowingsAPI","removeFollowerAPI"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n  LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\n  CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n  LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\n  LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE,\n  REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE,\n} from '../reducers/user';\n\nexport const loginRequestAction = (data) => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data,\n  };\n};\n\n// logout action\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST',\n  };\n};\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({ // put은 dispatch와 거의 같음.\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({ // put은 dispatch와 거의 같음.\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) { // signup api는 generator가 아님에 주의.\n  return axios.post('/user', data); // 데이터가 routes/user.js에서 req.body에 해당함.\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({ // put은 dispatch와 거의 같음.\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) { // signup api는 generator가 아님에 주의.\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({ // put은 dispatch와 거의 같음.\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI(data) { // signup api는 generator가 아님에 주의.\n  return axios.delete(`/user/${data}/unfollow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({ // put은 dispatch와 거의 같음.\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({ // put은 dispatch와 거의 같음.\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n      // data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({ // put은 dispatch와 거의 같음.\n      type: CHANGE_NICKNAME_FAILURE,\n      // data: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowersAPI() {\n  return axios.get('/user/followers');\n}\n\nfunction* loadFollowers() {\n  try {\n    const result = yield call(loadFollowersAPI);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data,\n      // data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({ // put은 dispatch와 거의 같음.\n      type: LOAD_FOLLOWERS_FAILURE,\n      // data: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowingsAPI() {\n  return axios.get('/user/followings');\n}\n\nfunction* loadFollowings() {\n  try {\n    const result = yield call(loadFollowingsAPI);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data,\n      // data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({ // put은 dispatch와 거의 같음.\n      type: LOAD_FOLLOWINGS_FAILURE,\n      // data: err.response.data,\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data,\n      // data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({ // put은 dispatch와 거의 같음.\n      type: REMOVE_FOLLOWER_FAILURE,\n      // data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo); // takeLeading은 첫번째꺼\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow); // takeLeading은 첫번째꺼\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow); // takeLeading은 첫번째꺼\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); // LOG_IN이 들어오면 logIn을 실행하는 일종의 이벤트리스너?\n} // take의 치명적 단점은 한 번 밖에 listend을 안한다는 것. --> 그래서 while true로 감쌈. or takeEvery 사용\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut); // takeLeading은 첫번째꺼\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp); // takeLeading은 첫번째꺼\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchloadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchloadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchremoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchremoveFollower),\n    fork(watchloadFollowers),\n    fork(watchloadFollowings),\n    fork(watchChangeNickname),\n    fork(watchLoadMyInfo),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}