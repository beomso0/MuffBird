{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  //로그인 시도 중.\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  //로그아웃 시도 중.\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  //로그인 시도 중.\n  signUpFailure: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nconst dummyUser = data(_objectSpread(_objectSpread({}, data), {}, {\n  ninkname: '범수',\n  id: 1,\n  Posts: [],\n  Followings: [],\n  Followers: []\n}));\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        logInlLoading: true,\n        //내가 바꾸고 싶은 부분만 수정\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        logInLoading: false,\n        logInDone: true,\n        //내가 바꾸고 싶은 부분만 수정\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        logOutLoading: true,\n        //내가 바꾸고 싶은 부분만 수정\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        logOutLoading: false,\n        //내가 바꾸고 싶은 부분만 수정\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        logOutLoading: false,\n        //내가 바꾸고 싶은 부분만 수정\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        signUpLoading: true,\n        //내가 바꾸고 싶은 부분만 수정\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        signUpLoading: false,\n        //내가 바꾸고 싶은 부분만 수정\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        signUpLoading: false,\n        //내가 바꾸고 싶은 부분만 수정\n        signUpError: action.error\n      });\n\n    default:\n      return state;\n  }\n}; //login action creator\n\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n}; //logout action\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n}; //action creator //action은 객체임!!\n\nconst changeNickname = data => {\n  return {\n    type: CHANE_NICKNAME,\n    data\n  };\n}; // --> store.dispatch(changeNickname('mama muffin'))\n\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpFailure","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","dummyUser","data","ninkname","id","Posts","Followings","Followers","reducer","state","action","type","logInlLoading","error","signUpError","loginRequestAction","logoutRequestAction","changeNickname","CHANE_NICKNAME"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    logInLoading: false,\r\n    logInDone: false, //로그인 시도 중.\r\n    logInError: null,\r\n    logOutLoading: false,\r\n    logOutDone: false, //로그아웃 시도 중.\r\n    logOutError: null,\r\n    signUpLoading: false,\r\n    signUpDone: false, //로그인 시도 중.\r\n    signUpFailure: null,\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST'\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS'\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'\r\n\r\nconst dummyUser = (data) ({\r\n    ...data,\r\n    ninkname: '범수',\r\n    id: 1,\r\n    Posts: [],\r\n    Followings: [],\r\n    Followers: [],\r\n});\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {        \r\n        case LOG_IN_REQUEST: //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                logInlLoading: true, //내가 바꾸고 싶은 부분만 수정\r\n                logInError: null,\r\n                logInDone: false,\r\n            };\r\n        case LOG_IN_SUCCESS: //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                logInLoading : false,\r\n                logInDone: true, //내가 바꾸고 싶은 부분만 수정\r\n                me: dummyUser(action.data),\r\n            };\r\n        case LOG_IN_FAILURE: //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                logInLoading : false,\r\n                logInError: action.error,\r\n            };\r\n        case  LOG_OUT_REQUEST :\r\n            return {\r\n                ...state, //참조관계 유지\r\n                logOutLoading: true, //내가 바꾸고 싶은 부분만 수정\r\n                logOutDone: false,\r\n                logOutError: null,\r\n            };\r\n        case  LOG_OUT_SUCCESS : //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                logOutLoading: false, //내가 바꾸고 싶은 부분만 수정\r\n                logOutDone: true,\r\n                me: null,\r\n            };\r\n        case LOG_OUT_FAILURE: //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                logOutLoading: false, //내가 바꾸고 싶은 부분만 수정\r\n                logOutError: action.error,\r\n            };\r\n        case  SIGN_UP_REQUEST :\r\n            return {\r\n                ...state, //참조관계 유지\r\n                signUpLoading: true, //내가 바꾸고 싶은 부분만 수정\r\n                signUpDone: false,\r\n                signUpError: null,\r\n            };\r\n        case  SIGN_UP_SUCCESS : //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                signUpLoading: false, //내가 바꾸고 싶은 부분만 수정\r\n                signUpDone: true,\r\n            };\r\n        case SIGN_UP_FAILURE: //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                signUpLoading: false, //내가 바꾸고 싶은 부분만 수정\r\n                signUpError: action.error,\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n//login action creator\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n//logout action\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\n//action creator //action은 객체임!!\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type: CHANE_NICKNAME,\r\n        data\r\n    }\r\n}; // --> store.dispatch(changeNickname('mama muffin'))\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}