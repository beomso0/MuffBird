{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Compu\\\\birdSns\\\\prepare\\\\front\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Proptypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers';\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 10px; \\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    padding: '10px';\\n\"])));\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // --> custom hooks로 중복 제거\n\n\n  var onSubmitForm = useCallback(function () {\n    // onFinish에는 e.preventDefault가 이미 적용돼있음 --> 중복 x\n    console.log(id, password);\n    dispatch(loginAction({\n      id: id,\n      password: password\n    }));\n  }, [id, password]); // [] 안이 callBack의 dependency였음!!!\n  //const style = useMemo(() => ({ marginTop: 10}), []);  --> styled 사용안하고 usememo로 객체 캐싱해서도 할 수 있음 !\n\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), \" \"), __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(LoginForm, \"n/CGE5NEGjUy/lrkg80J4K1I2hg=\", false, function () {\n  return [useDispatch, useInput, useInput];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/Compu/birdSns/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","Proptypes","useInput","useDispatch","loginAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","id","onChangeId","password","onChangePassword","onSubmitForm","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport Proptypes from 'prop-types';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginAction } from '../reducers';\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px; \r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: '10px';\r\n`;\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, onChangePassword] = useInput(''); // --> custom hooks로 중복 제거\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        // onFinish에는 e.preventDefault가 이미 적용돼있음 --> 중복 x\r\n        console.log(id, password);\r\n        dispatch(loginAction({ id, password }));        \r\n    }, [id, password]); // [] 안이 callBack의 dependency였음!!!\r\n\r\n    //const style = useMemo(() => ({ marginTop: 10}), []);  --> styled 사용안하고 usememo로 객체 캐싱해서도 할 수 있음 !\r\n\r\n    return (\r\n        <FormWrapper onFinish={onSubmitForm}>\r\n            <div>\r\n                <label htmlFor='user-id'>아이디</label>\r\n                <br />\r\n                <Input name='user-id' value={id} onChange={onChangeId} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='user-password'>비밀번호</label>\r\n                <br />\r\n                <Input \r\n                    name='user-password' \r\n                    value={password} \r\n                    onChange={onChangePassword} \r\n                    required\r\n                /> {/* 나중엔 react form 등의 라이브러리 쓰면 좋음 */}\r\n            </div>\r\n            <ButtonWrapper>\r\n                <Button type='primary' htmlType='submit' loading={false}>로그인</Button>\r\n                <Link href='/signup'><a><Button>회원가입</Button></a></Link>\r\n            </ButtonWrapper>\r\n            <div>\r\n                \r\n            </div>\r\n        </FormWrapper>\r\n    );\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}