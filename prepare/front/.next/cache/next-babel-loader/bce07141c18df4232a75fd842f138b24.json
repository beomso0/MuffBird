{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/beomso0/Desktop/godev/birdSns/prepare/front/pages/index.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport PostCard from '../components/PostCard';\nimport PostFrom from '../components/PostForm';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []); // useEffect의 배열 안의 인자는 검사 대상?을 가리킴. 빈 배열 넣으면 --> 처음 렌더링 시 한 번만 실행.\n\n  useEffect(_s(function () {\n    _s();\n\n    var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n        me = _useSelector.me;\n\n    var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n        mainPosts = _useSelector2.mainPosts;\n\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n        dispatch({\n          type: LOAD_POST_REQUEST\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, \"xnaPlH2dWSVJ2Sryweh/IT83a7M=\", false, function () {\n    return [useSelector, useSelector];\n  }), []);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostFrom, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s2(Home, \"AgIJcfH1H12KzRN1QiO1ExB/+eo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/pages/index.js"],"names":["useDispatch","useSelector","React","useEffect","AppLayout","PostCard","PostFrom","LOAD_POST_REQUEST","Home","dispatch","type","state","user","me","post","mainPosts","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA;;AACjB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAG,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT,CAFiB,CAMT;;AAERJ,EAAAA,SAAS,IAAC,YAAM;AAAA;;AACd,uBAAeF,WAAW,CAAC,UAACU,KAAD;AAAA,aAAWA,KAAK,CAACC,IAAjB;AAAA,KAAD,CAA1B;AAAA,QAAQC,EAAR,gBAAQA,EAAR;;AACA,wBAAsBZ,WAAW,CAAC,UAACU,KAAD;AAAA,aAAWA,KAAK,CAACG,IAAjB;AAAA,KAAD,CAAjC;AAAA,QAAQC,SAAR,iBAAQA,SAAR;;AAEA,aAASC,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CACEC,MAAM,CAACC,OADT,EAEEC,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAGEF,QAAQ,CAACC,eAAT,CAAyBE,YAH3B;;AAKA,UAAIL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAAxF,EAAsG;AACpGf,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEH;AADC,SAAD,CAAR;AAGD;AACF;;AAEDY,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,YAAM;AACXG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACD,KAFD;AAGD,GArBQ;AAAA,YACQf,WADR,EAEeA,WAFf;AAAA,MAqBN,EArBM,CAAT;AAsBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGE,SAAS,CAACY,GAAV,CAAc,UAACb,IAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACc,EAApB;AAAwB,MAAA,IAAI,EAAEd,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CAFH,CADF;AAQD,CAtCD;;IAAMN,I;UACaR,W;;;KADbQ,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostCard from '../components/PostCard';\r\nimport PostFrom from '../components/PostForm';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n    });\r\n  }, []); // useEffect의 배열 안의 인자는 검사 대상?을 가리킴. 빈 배열 넣으면 --> 처음 렌더링 시 한 번만 실행.\r\n\r\n  useEffect(() => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts } = useSelector((state) => state.post);\r\n\r\n    function onScroll() {\r\n      console.log(\r\n        window.scrollY,\r\n        document.documentElement.clientHeight,\r\n        document.documentElement.scrollHeight,\r\n      );\r\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\r\n        dispatch({\r\n          type: LOAD_POST_REQUEST,\r\n        });\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, []);\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostFrom />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}