{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  logInDone: false,\n  // 로그인 시도 중.\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  // 로그아웃 시도 중.\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  // 로그인 시도 중.\n  signUpFailure: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: '범수',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '밤수'\n    }, {\n      nickname: '범수'\n    }, {\n      nickname: '모피니'\n    }],\n    Followers: [{\n      nickname: '밤수'\n    }, {\n      nickname: '범수'\n    }, {\n      nickname: '모피니'\n    }]\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        logInlLoading: true,\n        // 내가 바꾸고 싶은 부분만 수정\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        logInLoading: false,\n        logInDone: true,\n        // 내가 바꾸고 싶은 부분만 수정\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        logOutLoading: true,\n        // 내가 바꾸고 싶은 부분만 수정\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        logOutLoading: false,\n        // 내가 바꾸고 싶은 부분만 수정\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        logOutLoading: false,\n        // 내가 바꾸고 싶은 부분만 수정\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        signUpLoading: true,\n        // 내가 바꾸고 싶은 부분만 수정\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        signUpLoading: false,\n        // 내가 바꾸고 싶은 부분만 수정\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        signUpLoading: false,\n        // 내가 바꾸고 싶은 부분만 수정\n        signUpError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        changeNicknameLoading: true,\n        // 내가 바꾸고 싶은 부분만 수정\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        changeNicknameLoading: false,\n        // 내가 바꾸고 싶은 부분만 수정\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      // saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // 참조관계 유지\n        changeNicknameLoading: false,\n        // 내가 바꾸고 싶은 부분만 수정\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }].concat(_toConsumableArray(state.me.Posts))\n        })\n      });\n\n    case REMOVE_POST_OF_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: state.me.Posts.filter(function (v) {\n            return v.id !== action.data;\n          })\n        })\n      });\n\n    default:\n      return state;\n  }\n}; // login action creator\n\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n}; // logout action\n\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n}; // action creator //action은 객체임!!\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: CHANE_NICKNAME,\n    data: data\n  };\n}; // --> store.dispatch(changeNickname('mama muffin'))\n\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpFailure","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","reducer","state","action","type","logInlLoading","error","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","filter","v","loginRequestAction","logoutRequestAction","changeNickname","CHANE_NICKNAME"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false,\r\n  logInDone: false, // 로그인 시도 중.\r\n  logInError: null,\r\n  logOutLoading: false,\r\n  logOutDone: false, // 로그아웃 시도 중.\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false, // 로그인 시도 중.\r\n  signUpFailure: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: '범수',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: '밤수' }, { nickname: '범수' }, { nickname: '모피니' }],\r\n  Followers: [{ nickname: '밤수' }, { nickname: '범수' }, { nickname: '모피니' }],\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        logInlLoading: true, // 내가 바꾸고 싶은 부분만 수정\r\n        logInError: null,\r\n        logInDone: false,\r\n      };\r\n    case LOG_IN_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        logInLoading: false,\r\n        logInDone: true, // 내가 바꾸고 싶은 부분만 수정\r\n        me: dummyUser(action.data),\r\n      };\r\n    case LOG_IN_FAILURE: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        logInLoading: false,\r\n        logInError: action.error,\r\n      };\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        logOutLoading: true, // 내가 바꾸고 싶은 부분만 수정\r\n        logOutDone: false,\r\n        logOutError: null,\r\n      };\r\n    case LOG_OUT_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        logOutLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    case LOG_OUT_FAILURE: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        logOutLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n        logOutError: action.error,\r\n      };\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        signUpLoading: true, // 내가 바꾸고 싶은 부분만 수정\r\n        signUpDone: false,\r\n        signUpError: null,\r\n      };\r\n    case SIGN_UP_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        signUpLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n        signUpDone: true,\r\n      };\r\n    case SIGN_UP_FAILURE: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        signUpLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n        signUpError: action.error,\r\n      };\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        changeNicknameLoading: true, // 내가 바꾸고 싶은 부분만 수정\r\n        changeNicknameDone: false,\r\n        changeNicknameError: null,\r\n      };\r\n    case CHANGE_NICKNAME_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        changeNicknameLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n        changeNicknameDone: true,\r\n      };\r\n    case CHANGE_NICKNAME_FAILURE: // saga에서 action type name에 맞게 지정.\r\n      return {\r\n        ...state, // 참조관계 유지\r\n        changeNicknameLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n        changeNicknameError: action.error,\r\n      };\r\n    case ADD_POST_TO_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],\r\n        },\r\n      };\r\n    case REMOVE_POST_OF_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// login action creator\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\n// logout action\r\nexport const logoutRequestAction = () => ({\r\n  type: LOG_OUT_REQUEST,\r\n});\r\n\r\n// action creator //action은 객체임!!\r\nconst changeNickname = (data) => ({\r\n  type: CHANE_NICKNAME,\r\n  data,\r\n}); // --> store.dispatch(changeNickname('mama muffin'))\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}