{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI(data) {// return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      // put은 dispatch와 거의 같음.\n      type: ADD_POST_FAILURE // data: err.response.data,\n\n    });\n  }\n}\n\nfunction addCommentAPI(data) {// return axios.post('/api/post', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      // put은 dispatch와 거의 같음.\n      type: ADD_COMMENT_FAILURE // data: err.response.data,\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","addPost","action","type","err","addCommentAPI","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,EAEIC,mBAFJ,EAEyBC,mBAFzB,EAE8CC,mBAF9C,QAGO,kBAHP;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0B,CACtB;AACH;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAET,gBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOU,GAAP,EAAY;AACV,UAAMb,GAAG,CAAC;AAAE;AACRY,MAAAA,IAAI,EAAER,gBADA,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,SAASU,aAAT,CAAuBL,IAAvB,EAA6B,CACzB;AACH;;AAED,UAAUM,UAAV,CAAqBJ,MAArB,EAA6B;AACzB,MAAG;AACC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAEN,mBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOO,GAAP,EAAY;AACV,UAAMb,GAAG,CAAC;AAAE;AACRY,MAAAA,IAAI,EAAEL,mBADA,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,YAAV,GAAyB;AACrB,QAAMlB,UAAU,CAACI,gBAAD,EAAmBQ,OAAnB,CAAhB;AACH;;AAED,UAAUO,eAAV,GAA4B;AACxB,QAAMnB,UAAU,CAACO,mBAAD,EAAsBU,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAsB;AACjC,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACmB,YAAD,CADE,EAENnB,IAAI,CAACoB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport {\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n} from '../reducers/post'\n\nfunction addPostAPI(data) {\n    // return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n    try{\n        // const result = yield call(addPostAPI, action.data);\n        yield delay(1000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n            // data: result.data,\n        });\n    } catch (err) {\n        yield put({ // put은 dispatch와 거의 같음.\n            type: ADD_POST_FAILURE,\n            // data: err.response.data,\n        });\n    }    \n}\n\nfunction addCommentAPI(data) {\n    // return axios.post('/api/post', data);\n}\n\nfunction* addComment(action) {\n    try{\n        // const result = yield call(addCommentAPI, action.data);\n        yield delay(1000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            // data: result.data,\n        });\n    } catch (err) {\n        yield put({ // put은 dispatch와 거의 같음.\n            type: ADD_COMMENT_FAILURE,\n            // data: err.response.data,\n        });\n    }    \n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga () {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}