{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Compu\\\\birdSns\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //?는 있으면~~ 이라는 조건문.\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 42\n      }\n    }) //post는 index.js 에서 부모로부터 받아오고 있음. \n    ,\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 41\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 41\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 35\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: '${post.Comments.length}개의 댓글',\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 45\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })));\n};\n\n_s(PostCard, \"qjo02WruhXZcdwWdlG/xwVw2yKY=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    //객체들의 배열이라는 뜻\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/User/Documents/Compu/birdSns/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","useSelector","Card","Popover","Button","Avatar","List","Comment","PropTypes","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","Images","images","User","nickname","content","Comments","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { RetweetOutlined,HeartOutlined,HeartTwoTone , MessageOutlined, EllipsisOutlined,  } from '@ant-design/icons';\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);    \r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    }, []);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev)=>!prev);\r\n    },[]);\r\n    const id = useSelector((state) => state.user.me?.id); //?는 있으면~~ 이라는 조건문.\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.images} />} //post는 index.js 에서 부모로부터 받아오고 있음. \r\n                actions ={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor='#eb2f96' key='heart' onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id \r\n                                ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type='danger'>삭제</Button>\r\n                                    </>\r\n                                ) \r\n                                : <Button>신고</Button>} \r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm />\r\n                    <List \r\n                        header={'${post.Comments.length}개의 댓글'}\r\n                        itemLayout='horizontal'\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment \r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>)}\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object), //객체들의 배열이라는 뜻\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}