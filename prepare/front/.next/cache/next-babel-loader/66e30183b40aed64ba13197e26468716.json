{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  loadUserLoading: false,\n  loadUserDone: false,\n  // 로그인 시도 중.\n  loadUserError: null,\n  loadMyInfoLoading: false,\n  loadMyInfoDone: false,\n  // 로그인 시도 중.\n  loadMyInfoError: null,\n  followLoading: false,\n  followDone: false,\n  // 로그인 시도 중.\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  // 로그인 시도 중.\n  unfollowError: null,\n  logInLoading: false,\n  logInDone: false,\n  // 로그인 시도 중.\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  // 로그아웃 시도 중.\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  // 로그인 시도 중.\n  signUpFailure: null,\n  loadFollowersLoading: false,\n  loadFollowersDone: false,\n  // 로그인 시도 중.\n  loadFollowersFailure: null,\n  loadFollowingsLoading: false,\n  loadFollowingsDone: false,\n  // 로그인 시도 중.\n  loadFollowingsFailure: null,\n  removeFollowerLoading: false,\n  removeFollowerDone: false,\n  // 로그인 시도 중.\n  removeFollowerFailure: null,\n  me: null,\n  userInfo: null\n};\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_USER_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadUserlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadUserError = null;\n        draft.loadUserDone = false;\n        break;\n\n      case LOAD_USER_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadUserLoading = false;\n        draft.loadUserDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.userInfo = action.data;\n        break;\n\n      case LOAD_USER_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n\n      case LOAD_MY_INFO_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadMyInfolLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadMyInfoError = null;\n        draft.loadMyInfoDone = false;\n        break;\n\n      case LOAD_MY_INFO_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me = action.data;\n        break;\n\n      case LOAD_MY_INFO_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoError = action.error;\n        break;\n\n      case FOLLOW_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.followlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.followError = null;\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.followLoading = false;\n        draft.followDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me.Followings.push({\n          id: action.data.UserId\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.unfollowlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.unfollowError = null;\n        draft.unfollowDone = false;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId); // 언팔할 사람만 빠짐\n\n        break;\n\n      case UNFOLLOW_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.logInlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.logInLoading = false;\n        draft.logInDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.logOutLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        return _objectSpread(_objectSpread({}, state), {}, {\n          // 참조관계 유지\n          logOutLoading: false,\n          // 내가 바꾸고 싶은 부분만 수정\n          logOutError: action.error\n        });\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.me.nickname = action.data.nickname;\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.changeNicknameError = action.error;\n        break;\n\n      case LOAD_FOLLOWERS_REQUEST:\n        draft.loadFollowersLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadFollowersDone = false;\n        draft.loadFollowersError = null;\n        break;\n\n      case LOAD_FOLLOWERS_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.me.Followers = action.data;\n        draft.loadFollowersLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadFollowersDone = true;\n        break;\n\n      case LOAD_FOLLOWERS_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadFollowersLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadFollowersError = action.error;\n        break;\n\n      case LOAD_FOLLOWINGS_REQUEST:\n        draft.loadFollowingsLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadFollowingsDone = false;\n        draft.loadFollowingsError = null;\n        break;\n\n      case LOAD_FOLLOWINGS_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.me.Followings = action.data;\n        draft.loadFollowingsLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadFollowingsDone = true;\n        break;\n\n      case LOAD_FOLLOWINGS_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadFollowingsLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadFollowingsError = action.error;\n        break;\n\n      case REMOVE_FOLLOWER_REQUEST:\n        draft.removeFollowerLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.removeFollowerDone = false;\n        draft.removeFollowerError = null;\n        break;\n\n      case REMOVE_FOLLOWER_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n        draft.removeFollowerLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.removeFollowerDone = true;\n        break;\n\n      case REMOVE_FOLLOWER_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.removeFollowerLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.removeFollowerError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //   },\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n      // 나중에 성능 문제 생기면 filter 대신 unshift 사용할 것.\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //   },\n      // };\n\n      default:\n        break;\n    }\n  });\n}; // login action creator\n\n\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n}); // logout action\n\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/reducers/user.js"],"names":["produce","initialState","loadUserLoading","loadUserDone","loadUserError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpFailure","loadFollowersLoading","loadFollowersDone","loadFollowersFailure","loadFollowingsLoading","loadFollowingsDone","loadFollowingsFailure","removeFollowerLoading","removeFollowerDone","removeFollowerFailure","me","userInfo","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","reducer","state","action","draft","type","loadUserlLoading","data","error","loadMyInfolLoading","followlLoading","Followings","push","id","UserId","unfollowlLoading","filter","v","logInlLoading","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","nickname","loadFollowersError","Followers","loadFollowingsError","removeFollowerError","Posts","unshift","loginRequestAction","logoutRequestAction"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,eAAe,EAAE,KADS;AAE1BC,EAAAA,YAAY,EAAE,KAFY;AAEL;AACrBC,EAAAA,aAAa,EAAE,IAHW;AAI1BC,EAAAA,iBAAiB,EAAE,KAJO;AAK1BC,EAAAA,cAAc,EAAE,KALU;AAKH;AACvBC,EAAAA,eAAe,EAAE,IANS;AAO1BC,EAAAA,aAAa,EAAE,KAPW;AAQ1BC,EAAAA,UAAU,EAAE,KARc;AAQP;AACnBC,EAAAA,WAAW,EAAE,IATa;AAU1BC,EAAAA,eAAe,EAAE,KAVS;AAW1BC,EAAAA,YAAY,EAAE,KAXY;AAWL;AACrBC,EAAAA,aAAa,EAAE,IAZW;AAa1BC,EAAAA,YAAY,EAAE,KAbY;AAc1BC,EAAAA,SAAS,EAAE,KAde;AAcR;AAClBC,EAAAA,UAAU,EAAE,IAfc;AAgB1BC,EAAAA,aAAa,EAAE,KAhBW;AAiB1BC,EAAAA,UAAU,EAAE,KAjBc;AAiBP;AACnBC,EAAAA,WAAW,EAAE,IAlBa;AAmB1BC,EAAAA,aAAa,EAAE,KAnBW;AAoB1BC,EAAAA,UAAU,EAAE,KApBc;AAoBP;AACnBC,EAAAA,aAAa,EAAE,IArBW;AAsB1BC,EAAAA,oBAAoB,EAAE,KAtBI;AAuB1BC,EAAAA,iBAAiB,EAAE,KAvBO;AAuBA;AAC1BC,EAAAA,oBAAoB,EAAE,IAxBI;AAyB1BC,EAAAA,qBAAqB,EAAE,KAzBG;AA0B1BC,EAAAA,kBAAkB,EAAE,KA1BM;AA0BC;AAC3BC,EAAAA,qBAAqB,EAAE,IA3BG;AA4B1BC,EAAAA,qBAAqB,EAAE,KA5BG;AA6B1BC,EAAAA,kBAAkB,EAAE,KA7BM;AA6BC;AAC3BC,EAAAA,qBAAqB,EAAE,IA9BG;AA+B1BC,EAAAA,EAAE,EAAE,IA/BsB;AAgC1BC,EAAAA,QAAQ,EAAE;AAhCgB,CAArB;AAmCP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGrE,YAAT,EAAuBsE,MAAvB,KAAkC;AAChD,SAAOvE,OAAO,CAACsE,KAAD,EAASE,KAAD,IAAW;AAC/B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKjC,iBAAL;AAAwB;AACtBgC,QAAAA,KAAK,CAACE,gBAAN,GAAyB,IAAzB,CADF,CACiC;;AAC/BF,QAAAA,KAAK,CAACpE,aAAN,GAAsB,IAAtB;AACAoE,QAAAA,KAAK,CAACrE,YAAN,GAAqB,KAArB;AACA;;AACF,WAAKsC,iBAAL;AAAwB;AACtB+B,QAAAA,KAAK,CAACtE,eAAN,GAAwB,KAAxB;AACAsE,QAAAA,KAAK,CAACrE,YAAN,GAAqB,IAArB,CAFF,CAE6B;;AAC3BqE,QAAAA,KAAK,CAACvC,QAAN,GAAiBsC,MAAM,CAACI,IAAxB;AACA;;AACF,WAAKjC,iBAAL;AAAwB;AACtB8B,QAAAA,KAAK,CAACtE,eAAN,GAAwB,KAAxB;AACAsE,QAAAA,KAAK,CAACpE,aAAN,GAAsBmE,MAAM,CAACK,KAA7B;AACA;;AACF,WAAKvC,oBAAL;AAA2B;AACzBmC,QAAAA,KAAK,CAACK,kBAAN,GAA2B,IAA3B,CADF,CACmC;;AACjCL,QAAAA,KAAK,CAACjE,eAAN,GAAwB,IAAxB;AACAiE,QAAAA,KAAK,CAAClE,cAAN,GAAuB,KAAvB;AACA;;AACF,WAAKgC,oBAAL;AAA2B;AACzBkC,QAAAA,KAAK,CAACnE,iBAAN,GAA0B,KAA1B;AACAmE,QAAAA,KAAK,CAAClE,cAAN,GAAuB,IAAvB,CAFF,CAE+B;;AAC7BkE,QAAAA,KAAK,CAACxC,EAAN,GAAWuC,MAAM,CAACI,IAAlB;AACA;;AACF,WAAKpC,oBAAL;AAA2B;AACzBiC,QAAAA,KAAK,CAACnE,iBAAN,GAA0B,KAA1B;AACAmE,QAAAA,KAAK,CAACjE,eAAN,GAAwBgE,MAAM,CAACK,KAA/B;AACA;;AACF,WAAKf,cAAL;AAAqB;AACnBW,QAAAA,KAAK,CAACM,cAAN,GAAuB,IAAvB,CADF,CAC+B;;AAC7BN,QAAAA,KAAK,CAAC9D,WAAN,GAAoB,IAApB;AACA8D,QAAAA,KAAK,CAAC/D,UAAN,GAAmB,KAAnB;AACA;;AACF,WAAKqD,cAAL;AAAqB;AACnBU,QAAAA,KAAK,CAAChE,aAAN,GAAsB,KAAtB;AACAgE,QAAAA,KAAK,CAAC/D,UAAN,GAAmB,IAAnB,CAFF,CAE2B;;AACzB+D,QAAAA,KAAK,CAACxC,EAAN,CAAS+C,UAAT,CAAoBC,IAApB,CAAyB;AAAEC,UAAAA,EAAE,EAAEV,MAAM,CAACI,IAAP,CAAYO;AAAlB,SAAzB;AACA;;AACF,WAAKnB,cAAL;AAAqB;AACnBS,QAAAA,KAAK,CAAChE,aAAN,GAAsB,KAAtB;AACAgE,QAAAA,KAAK,CAAC9D,WAAN,GAAoB6D,MAAM,CAACK,KAA3B;AACA;;AACF,WAAKZ,gBAAL;AAAuB;AACrBQ,QAAAA,KAAK,CAACW,gBAAN,GAAyB,IAAzB,CADF,CACiC;;AAC/BX,QAAAA,KAAK,CAAC3D,aAAN,GAAsB,IAAtB;AACA2D,QAAAA,KAAK,CAAC5D,YAAN,GAAqB,KAArB;AACA;;AACF,WAAKqD,gBAAL;AAAuB;AACrBO,QAAAA,KAAK,CAAC7D,eAAN,GAAwB,KAAxB;AACA6D,QAAAA,KAAK,CAAC5D,YAAN,GAAqB,IAArB,CAFF,CAE6B;;AAC3B4D,QAAAA,KAAK,CAACxC,EAAN,CAAS+C,UAAT,GAAsBP,KAAK,CAACxC,EAAN,CAAS+C,UAAT,CAAoBK,MAApB,CAA4BC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASV,MAAM,CAACI,IAAP,CAAYO,MAAvD,CAAtB,CAHF,CAIE;;AACA;;AACF,WAAKhB,gBAAL;AAAuB;AACrBM,QAAAA,KAAK,CAAC7D,eAAN,GAAwB,KAAxB;AACA6D,QAAAA,KAAK,CAAC3D,aAAN,GAAsB0D,MAAM,CAACK,KAA7B;AACA;;AACF,WAAK3B,cAAL;AAAqB;AACnBuB,QAAAA,KAAK,CAACc,aAAN,GAAsB,IAAtB,CADF,CAC8B;;AAC5Bd,QAAAA,KAAK,CAACxD,UAAN,GAAmB,IAAnB;AACAwD,QAAAA,KAAK,CAACzD,SAAN,GAAkB,KAAlB;AACA;;AACF,WAAKmC,cAAL;AAAqB;AACnBsB,QAAAA,KAAK,CAAC1D,YAAN,GAAqB,KAArB;AACA0D,QAAAA,KAAK,CAACzD,SAAN,GAAkB,IAAlB,CAFF,CAE0B;;AACxByD,QAAAA,KAAK,CAACxC,EAAN,GAAWuC,MAAM,CAACI,IAAlB;AACA;;AACF,WAAKxB,cAAL;AAAqB;AACnBqB,QAAAA,KAAK,CAAC1D,YAAN,GAAqB,KAArB;AACA0D,QAAAA,KAAK,CAACxD,UAAN,GAAmBuD,MAAM,CAACK,KAA1B;AACA;;AACF,WAAKxB,eAAL;AACEoB,QAAAA,KAAK,CAACvD,aAAN,GAAsB,IAAtB,CADF,CAC8B;;AAC5BuD,QAAAA,KAAK,CAACtD,UAAN,GAAmB,KAAnB;AACAsD,QAAAA,KAAK,CAACrD,WAAN,GAAoB,IAApB;AACA;;AACF,WAAKkC,eAAL;AAAsB;AACpBmB,QAAAA,KAAK,CAACvD,aAAN,GAAsB,KAAtB,CADF,CAC+B;;AAC7BuD,QAAAA,KAAK,CAACtD,UAAN,GAAmB,IAAnB;AACAsD,QAAAA,KAAK,CAACxC,EAAN,GAAW,IAAX;AACA;;AACF,WAAKsB,eAAL;AAAsB;AACpB,+CACKgB,KADL;AACY;AACVrD,UAAAA,aAAa,EAAE,KAFjB;AAEwB;AACtBE,UAAAA,WAAW,EAAEoD,MAAM,CAACK;AAHtB;;AAKF,WAAKrB,eAAL;AACEiB,QAAAA,KAAK,CAACpD,aAAN,GAAsB,IAAtB,CADF,CAC8B;;AAC5BoD,QAAAA,KAAK,CAACnD,UAAN,GAAmB,KAAnB;AACAmD,QAAAA,KAAK,CAACe,WAAN,GAAoB,IAApB;AACA;;AACF,WAAK/B,eAAL;AAAsB;AACpBgB,QAAAA,KAAK,CAACpD,aAAN,GAAsB,KAAtB,CADF,CAC+B;;AAC7BoD,QAAAA,KAAK,CAACnD,UAAN,GAAmB,IAAnB;AACA;;AACF,WAAKoC,eAAL;AAAsB;AACpBe,QAAAA,KAAK,CAACpD,aAAN,GAAsB,KAAtB,CADF,CAC+B;;AAC7BoD,QAAAA,KAAK,CAACe,WAAN,GAAoBhB,MAAM,CAACK,KAA3B;AACA;;AACF,WAAKlB,uBAAL;AACEc,QAAAA,KAAK,CAACgB,qBAAN,GAA8B,IAA9B,CADF,CACsC;;AACpChB,QAAAA,KAAK,CAACiB,kBAAN,GAA2B,KAA3B;AACAjB,QAAAA,KAAK,CAACkB,mBAAN,GAA4B,IAA5B;AACA;;AACF,WAAK/B,uBAAL;AAA8B;AAC5Ba,QAAAA,KAAK,CAACxC,EAAN,CAAS2D,QAAT,GAAoBpB,MAAM,CAACI,IAAP,CAAYgB,QAAhC;AACAnB,QAAAA,KAAK,CAACgB,qBAAN,GAA8B,KAA9B,CAFF,CAEuC;;AACrChB,QAAAA,KAAK,CAACiB,kBAAN,GAA2B,IAA3B;AACA;;AACF,WAAK7B,uBAAL;AAA8B;AAC5BY,QAAAA,KAAK,CAACgB,qBAAN,GAA8B,KAA9B,CADF,CACuC;;AACrChB,QAAAA,KAAK,CAACkB,mBAAN,GAA4BnB,MAAM,CAACK,KAAnC;AACA;;AACF,WAAKjC,sBAAL;AACE6B,QAAAA,KAAK,CAACjD,oBAAN,GAA6B,IAA7B,CADF,CACqC;;AACnCiD,QAAAA,KAAK,CAAChD,iBAAN,GAA0B,KAA1B;AACAgD,QAAAA,KAAK,CAACoB,kBAAN,GAA2B,IAA3B;AACA;;AACF,WAAKhD,sBAAL;AAA6B;AAC3B4B,QAAAA,KAAK,CAACxC,EAAN,CAAS6D,SAAT,GAAqBtB,MAAM,CAACI,IAA5B;AACAH,QAAAA,KAAK,CAACjD,oBAAN,GAA6B,KAA7B,CAFF,CAEsC;;AACpCiD,QAAAA,KAAK,CAAChD,iBAAN,GAA0B,IAA1B;AACA;;AACF,WAAKqB,sBAAL;AAA6B;AAC3B2B,QAAAA,KAAK,CAACjD,oBAAN,GAA6B,KAA7B,CADF,CACsC;;AACpCiD,QAAAA,KAAK,CAACoB,kBAAN,GAA2BrB,MAAM,CAACK,KAAlC;AACA;;AACF,WAAK9B,uBAAL;AACE0B,QAAAA,KAAK,CAAC9C,qBAAN,GAA8B,IAA9B,CADF,CACsC;;AACpC8C,QAAAA,KAAK,CAAC7C,kBAAN,GAA2B,KAA3B;AACA6C,QAAAA,KAAK,CAACsB,mBAAN,GAA4B,IAA5B;AACA;;AACF,WAAK/C,uBAAL;AAA8B;AAC5ByB,QAAAA,KAAK,CAACxC,EAAN,CAAS+C,UAAT,GAAsBR,MAAM,CAACI,IAA7B;AACAH,QAAAA,KAAK,CAAC9C,qBAAN,GAA8B,KAA9B,CAFF,CAEuC;;AACrC8C,QAAAA,KAAK,CAAC7C,kBAAN,GAA2B,IAA3B;AACA;;AACF,WAAKqB,uBAAL;AAA8B;AAC5BwB,QAAAA,KAAK,CAAC9C,qBAAN,GAA8B,KAA9B,CADF,CACuC;;AACrC8C,QAAAA,KAAK,CAACsB,mBAAN,GAA4BvB,MAAM,CAACK,KAAnC;AACA;;AACF,WAAK1C,uBAAL;AACEsC,QAAAA,KAAK,CAAC3C,qBAAN,GAA8B,IAA9B,CADF,CACsC;;AACpC2C,QAAAA,KAAK,CAAC1C,kBAAN,GAA2B,KAA3B;AACA0C,QAAAA,KAAK,CAACuB,mBAAN,GAA4B,IAA5B;AACA;;AACF,WAAK5D,uBAAL;AAA8B;AAC5BqC,QAAAA,KAAK,CAACxC,EAAN,CAAS6D,SAAT,GAAqBrB,KAAK,CAACxC,EAAN,CAAS6D,SAAT,CAAmBT,MAAnB,CAA2BC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASV,MAAM,CAACI,IAAP,CAAYO,MAAtD,CAArB;AACAV,QAAAA,KAAK,CAAC3C,qBAAN,GAA8B,KAA9B,CAFF,CAEuC;;AACrC2C,QAAAA,KAAK,CAAC1C,kBAAN,GAA2B,IAA3B;AACA;;AACF,WAAKM,uBAAL;AAA8B;AAC5BoC,QAAAA,KAAK,CAAC3C,qBAAN,GAA8B,KAA9B,CADF,CACuC;;AACrC2C,QAAAA,KAAK,CAACuB,mBAAN,GAA4BxB,MAAM,CAACK,KAAnC;AACA;;AACF,WAAKT,cAAL;AACEK,QAAAA,KAAK,CAACxC,EAAN,CAASgE,KAAT,CAAeC,OAAf,CAAuB;AAAEhB,UAAAA,EAAE,EAAEV,MAAM,CAACI;AAAb,SAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACF,WAAKP,iBAAL;AACEI,QAAAA,KAAK,CAACxC,EAAN,CAASgE,KAAT,GAAiBxB,KAAK,CAACxC,EAAN,CAASgE,KAAT,CAAeZ,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASV,MAAM,CAACI,IAA7C,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACF;AACE;AAnLJ;AAqLD,GAtLa,CAAd;AAuLD,CAxLD,C,CA0LA;;;AACA,OAAO,MAAMuB,kBAAkB,GAAIvB,IAAD,KAAW;AAC3CF,EAAAA,IAAI,EAAExB,cADqC;AAE3C0B,EAAAA;AAF2C,CAAX,CAA3B,C,CAKP;;AACA,OAAO,MAAMwB,mBAAmB,GAAG,OAAO;AACxC1B,EAAAA,IAAI,EAAErB;AADkC,CAAP,CAA5B;AAIP,eAAeiB,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  loadUserLoading: false,\r\n  loadUserDone: false, // 로그인 시도 중.\r\n  loadUserError: null,\r\n  loadMyInfoLoading: false,\r\n  loadMyInfoDone: false, // 로그인 시도 중.\r\n  loadMyInfoError: null,\r\n  followLoading: false,\r\n  followDone: false, // 로그인 시도 중.\r\n  followError: null,\r\n  unfollowLoading: false,\r\n  unfollowDone: false, // 로그인 시도 중.\r\n  unfollowError: null,\r\n  logInLoading: false,\r\n  logInDone: false, // 로그인 시도 중.\r\n  logInError: null,\r\n  logOutLoading: false,\r\n  logOutDone: false, // 로그아웃 시도 중.\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false, // 로그인 시도 중.\r\n  signUpFailure: null,\r\n  loadFollowersLoading: false,\r\n  loadFollowersDone: false, // 로그인 시도 중.\r\n  loadFollowersFailure: null,\r\n  loadFollowingsLoading: false,\r\n  loadFollowingsDone: false, // 로그인 시도 중.\r\n  loadFollowingsFailure: null,\r\n  removeFollowerLoading: false,\r\n  removeFollowerDone: false, // 로그인 시도 중.\r\n  removeFollowerFailure: null,\r\n  me: null,\r\n  userInfo: null,\r\n};\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_USER_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.loadUserlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadUserError = null;\r\n        draft.loadUserDone = false;\r\n        break;\r\n      case LOAD_USER_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.loadUserLoading = false;\r\n        draft.loadUserDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.userInfo = action.data;\r\n        break;\r\n      case LOAD_USER_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.loadUserLoading = false;\r\n        draft.loadUserError = action.error;\r\n        break;\r\n      case LOAD_MY_INFO_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.loadMyInfolLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadMyInfoError = null;\r\n        draft.loadMyInfoDone = false;\r\n        break;\r\n      case LOAD_MY_INFO_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me = action.data;\r\n        break;\r\n      case LOAD_MY_INFO_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoError = action.error;\r\n        break;\r\n      case FOLLOW_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.followlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.followError = null;\r\n        draft.followDone = false;\r\n        break;\r\n      case FOLLOW_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.followLoading = false;\r\n        draft.followDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me.Followings.push({ id: action.data.UserId });\r\n        break;\r\n      case FOLLOW_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.followLoading = false;\r\n        draft.followError = action.error;\r\n        break;\r\n      case UNFOLLOW_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.unfollowlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.unfollowError = null;\r\n        draft.unfollowDone = false;\r\n        break;\r\n      case UNFOLLOW_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n        // 언팔할 사람만 빠짐\r\n        break;\r\n      case UNFOLLOW_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        break;\r\n      case LOG_IN_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.logInlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        break;\r\n      case LOG_IN_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me = action.data;\r\n        break;\r\n      case LOG_IN_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.logOutLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        return {\r\n          ...state, // 참조관계 유지\r\n          logOutLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n          logOutError: action.error,\r\n        };\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.me.nickname = action.data.nickname;\r\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      case LOAD_FOLLOWERS_REQUEST:\r\n        draft.loadFollowersLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadFollowersDone = false;\r\n        draft.loadFollowersError = null;\r\n        break;\r\n      case LOAD_FOLLOWERS_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.me.Followers = action.data;\r\n        draft.loadFollowersLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadFollowersDone = true;\r\n        break;\r\n      case LOAD_FOLLOWERS_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.loadFollowersLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadFollowersError = action.error;\r\n        break;\r\n      case LOAD_FOLLOWINGS_REQUEST:\r\n        draft.loadFollowingsLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadFollowingsDone = false;\r\n        draft.loadFollowingsError = null;\r\n        break;\r\n      case LOAD_FOLLOWINGS_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.me.Followings = action.data;\r\n        draft.loadFollowingsLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadFollowingsDone = true;\r\n        break;\r\n      case LOAD_FOLLOWINGS_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.loadFollowingsLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadFollowingsError = action.error;\r\n        break;\r\n      case REMOVE_FOLLOWER_REQUEST:\r\n        draft.removeFollowerLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.removeFollowerDone = false;\r\n        draft.removeFollowerError = null;\r\n        break;\r\n      case REMOVE_FOLLOWER_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n        draft.removeFollowerLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.removeFollowerDone = true;\r\n        break;\r\n      case REMOVE_FOLLOWER_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.removeFollowerLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.removeFollowerError = action.error;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //   },\r\n        // };\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n        // 나중에 성능 문제 생기면 filter 대신 unshift 사용할 것.\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //   },\r\n        // };\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\n// login action creator\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\n// logout action\r\nexport const logoutRequestAction = () => ({\r\n  type: LOG_OUT_REQUEST,\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}