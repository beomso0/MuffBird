{"ast":null,"code":"var _jsxFileName = \"/Users/beomso0/Desktop/godev/birdSns/prepare/front/components/CommentForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/components/CommentForm.js"],"names":["Button","Form","Input","useCallback","useEffect","PropTypes","useSelector","useDispatch","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,EAAE,GAAGP,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqBX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDZ,QAAQ,CAAC,EAAD,CAAnE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,cAAJ,EAAoB;AAClBG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;AAMA,QAAMI,eAAe,GAAGlB,WAAW,CAAC,MAAM;AACxCmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACE,EAAjB,EAAqBK,WAArB;AACAN,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEhB,IAAI,CAACE,EAArC;AAAyCe,QAAAA,MAAM,EAAEf;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACK,WAAD,EAAcL,EAAd,CANgC,CAAnC;AAOA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEZ,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,MAAAA,MAAM,EAAE;AAAvD,KAAf;AAA2E,IAAA,IAAI,EAAC,SAAhF;AAA0F,IAAA,QAAQ,EAAC,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF;AAQD,CA3BD;;AA6BAvB,WAAW,CAACwB,SAAZ,GAAwB;AACtBvB,EAAAA,IAAI,EAAEN,SAAS,CAAC8B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe1B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone } = useSelector((state) => state.post);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n        <Button style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }} type=\"primary\" htmlType=\"submit\">ì§¹</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}