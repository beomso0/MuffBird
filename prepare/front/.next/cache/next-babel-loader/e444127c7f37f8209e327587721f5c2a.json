{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Compu\\\\birdSns\\\\prepare\\\\front\\\\components\\\\PostCardContent.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\n\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n\n  //'첫번째 게시글 #해시태그 #하이하이'\n  __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, postData.split(/(#[^\\s#]+)/g).map(function (v) {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: \"/hashtag/\".concat(v.slice(1)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 24\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 62\n        }\n      }, v));\n    }\n\n    return v;\n  }), \" \");\n};\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["C:/Users/User/Documents/Compu/birdSns/prepare/front/components/PostCardContent.js"],"names":["Link","PropTypes","PostCardContent","postData","split","map","v","match","slice","propTypes","string","isRequired"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAE;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACC,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,UAACC,CAAD,EAAO;AACtC,QAAIA,CAAC,CAACC,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACvB,aAAO,MAAC,IAAD;AAAM,QAAA,IAAI,qBAAcD,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAd,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,CAAJ,CAAtC,CAAP;AACH;;AACD,WAAOA,CAAP;AACH,GALA,CADL;AAQH,CATD;;KAAMJ,e;AAWNA,eAAe,CAACO,SAAhB,GAA4B;AAACN,EAAAA,QAAQ,EAAEF,SAAS,CAACS,MAAV,CAAiBC;AAA5B,CAA5B;AAEA,eAAeT,eAAf","sourcesContent":["import Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostCardContent = ({ postData }) => { //'첫번째 게시글 #해시태그 #하이하이'\r\n    <div>\r\n        {postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n            if (v.match(/(#[^\\s#]+)/)) {\r\n                return <Link href={`/hashtag/${v.slice(1)}`}><a>{v}</a></Link>\r\n            }\r\n            return v;\r\n        })} {/* / / 사이에 글자 넣으면 정규표현식 사용 가능. RegExr 유용함. 다양한 케이스 고려하는 것이 필수. */}\r\n    </div>\r\n};\r\n\r\nPostCardContent.propTypes = {postData: PropTypes.string.isRequired};\r\n\r\nexport default PostCardContent;"]},"metadata":{},"sourceType":"module"}