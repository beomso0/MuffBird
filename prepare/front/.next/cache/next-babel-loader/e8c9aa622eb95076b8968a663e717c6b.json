{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Compu\\\\birdSns\\\\prepare\\\\front\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 10px; \\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    padding: '10px';\\n\"])));\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var onChaneId = useCallback(function (e) {\n    setId(e.target.value);\n  }, []);\n  var onChanePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, []);\n  var onSubmitForm = useCallback(function () {\n    // onFinish에는 e.preventDefault가 이미 적용돼있음 --> 중복 x\n    console.log(id, password);\n    setIsLoggedIn(true); // setIsLoggedIn은 appLayOut의 dummy데이터에서 옴.\n  }, [id, password]); // [] 안이 callBack의 dependency였음!!!\n  //const style = useMemo(() => ({ marginTop: 10}), []);  --> styled 사용안하고 usememo로 객체 캐싱해서도 할 수 있음 !\n\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChaneId,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChanePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), \" \"), __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(LoginForm, \"aIhCZbvpOFPWfdKGciHPX8615l8=\");\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/Compu/birdSns/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","setId","password","setPassword","onChaneId","e","target","value","onChanePassword","onSubmitForm","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px; \r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: '10px';\r\n`;\r\n\r\nconst LoginForm = ({setIsLoggedIn}) => {\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const onChaneId = useCallback((e) => {\r\n        setId(e.target.value);\r\n    }, []);\r\n\r\n    const onChanePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        // onFinish에는 e.preventDefault가 이미 적용돼있음 --> 중복 x\r\n        console.log(id, password);\r\n        setIsLoggedIn(true); // setIsLoggedIn은 appLayOut의 dummy데이터에서 옴.\r\n    }, [id, password]); // [] 안이 callBack의 dependency였음!!!\r\n\r\n    //const style = useMemo(() => ({ marginTop: 10}), []);  --> styled 사용안하고 usememo로 객체 캐싱해서도 할 수 있음 !\r\n\r\n    return (\r\n        <FormWrapper onFinish={onSubmitForm}>\r\n            <div>\r\n                <label htmlFor='user-id'>아이디</label>\r\n                <br />\r\n                <Input name='user-id' value={id} onChange={onChaneId} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='user-password'>비밀번호</label>\r\n                <br />\r\n                <Input \r\n                    name='user-password' \r\n                    value={password} \r\n                    onChange={onChanePassword} \r\n                    required\r\n                /> {/* 나중엔 react form 등의 라이브러리 쓰면 좋음 */}\r\n            </div>\r\n            <ButtonWrapper>\r\n                <Button type='primary' htmlType='submit' loading={false}>로그인</Button>\r\n                <Link href='/signup'><a><Button>회원가입</Button></a></Link>\r\n            </ButtonWrapper>\r\n            <div>\r\n                \r\n            </div>\r\n        </FormWrapper>\r\n    );\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}