{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from 'immer';\nexport var initialState = {\n  loadMyInfoLoading: false,\n  loadMyInfoDone: false,\n  // 로그인 시도 중.\n  loadMyInfoError: null,\n  followLoading: false,\n  followDone: false,\n  // 로그인 시도 중.\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  // 로그인 시도 중.\n  unfollowError: null,\n  logInLoading: false,\n  logInDone: false,\n  // 로그인 시도 중.\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  // 로그아웃 시도 중.\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  // 로그인 시도 중.\n  signUpFailure: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport var LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport var LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport var UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport var UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: '범수',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '밤수'\n    }, {\n      nickname: '범수'\n    }, {\n      nickname: '모피니'\n    }],\n    Followers: [{\n      nickname: '밤수'\n    }, {\n      nickname: '범수'\n    }, {\n      nickname: '모피니'\n    }]\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_MY_INFO_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadMyInfolLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.loadMyInfoError = null;\n        draft.loadMyInfoDone = false;\n        break;\n\n      case LOAD_MY_INFO_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me = action.data;\n        break;\n\n      case LOAD_MY_INFO_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoError = action.error;\n        break;\n\n      case FOLLOW_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.followlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.followError = null;\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.followLoading = false;\n        draft.followDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me.Followings.push({\n          id: action.data\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.unfollowlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.unfollowError = null;\n        draft.unfollowDone = false;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data;\n        }); // 언팔할 사람만 빠짐\n\n        break;\n\n      case UNFOLLOW_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        // saga에서 action type name에 맞게 지정.\n        draft.logInlLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.logInLoading = false;\n        draft.logInDone = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.logOutLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        return _objectSpread(_objectSpread({}, state), {}, {\n          // 참조관계 유지\n          logOutLoading: false,\n          // 내가 바꾸고 싶은 부분만 수정\n          logOutError: action.error\n        });\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        // saga에서 action type name에 맞게 지정.\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        // saga에서 action type name에 맞게 지정.\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\n\n        draft.changeNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //   },\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // 나중에 성능 문제 생기면 filter 대신 unshift 사용할 것.\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //   },\n      // };\n\n      default:\n        break;\n    }\n  });\n}; // login action creator\n\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n}; // logout action\n\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n}; // action creator //action은 객체임!!\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: CHANE_NICKNAME,\n    data: data\n  };\n}; // --> store.dispatch(changeNickname('mama muffin'))\n\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpFailure","me","signUpData","loginData","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","reducer","state","action","draft","type","loadMyInfolLoading","error","followlLoading","push","unfollowlLoading","filter","v","logInlLoading","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","unshift","loginRequestAction","logoutRequestAction","changeNickname","CHANE_NICKNAME"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  loadMyInfoLoading: false,\r\n  loadMyInfoDone: false, // 로그인 시도 중.\r\n  loadMyInfoError: null,\r\n  followLoading: false,\r\n  followDone: false, // 로그인 시도 중.\r\n  followError: null,\r\n  unfollowLoading: false,\r\n  unfollowDone: false, // 로그인 시도 중.\r\n  unfollowError: null,\r\n  logInLoading: false,\r\n  logInDone: false, // 로그인 시도 중.\r\n  logInError: null,\r\n  logOutLoading: false,\r\n  logOutDone: false, // 로그아웃 시도 중.\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false, // 로그인 시도 중.\r\n  signUpFailure: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: '범수',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: '밤수' }, { nickname: '범수' }, { nickname: '모피니' }],\r\n  Followers: [{ nickname: '밤수' }, { nickname: '범수' }, { nickname: '모피니' }],\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_MY_INFO_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.loadMyInfolLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.loadMyInfoError = null;\r\n        draft.loadMyInfoDone = false;\r\n        break;\r\n      case LOAD_MY_INFO_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me = action.data;\r\n        break;\r\n      case LOAD_MY_INFO_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoError = action.error;\r\n        break;\r\n      case FOLLOW_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.followlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.followError = null;\r\n        draft.followDone = false;\r\n        break;\r\n      case FOLLOW_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.followLoading = false;\r\n        draft.followDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me.Followings.push({ id: action.data });\r\n        break;\r\n      case FOLLOW_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.followLoading = false;\r\n        draft.followError = action.error;\r\n        break;\r\n      case UNFOLLOW_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.unfollowlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.unfollowError = null;\r\n        draft.unfollowDone = false;\r\n        break;\r\n      case UNFOLLOW_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\r\n        // 언팔할 사람만 빠짐\r\n        break;\r\n      case UNFOLLOW_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        break;\r\n      case LOG_IN_REQUEST: // saga에서 action type name에 맞게 지정.\r\n        draft.logInlLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        break;\r\n      case LOG_IN_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.me = action.data;\r\n        break;\r\n      case LOG_IN_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.logOutLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        return {\r\n          ...state, // 참조관계 유지\r\n          logOutLoading: false, // 내가 바꾸고 싶은 부분만 수정\r\n          logOutError: action.error,\r\n        };\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.signUpLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS: // saga에서 action type name에 맞게 지정.\r\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE: // saga에서 action type name에 맞게 지정.\r\n        draft.changeNicknameLoading = false; // 내가 바꾸고 싶은 부분만 수정\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //   },\r\n        // };\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n        // 나중에 성능 문제 생기면 filter 대신 unshift 사용할 것.\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //   },\r\n        // };\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\n// login action creator\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\n// logout action\r\nexport const logoutRequestAction = () => ({\r\n  type: LOG_OUT_REQUEST,\r\n});\r\n\r\n// action creator //action은 객체임!!\r\nconst changeNickname = (data) => ({\r\n  type: CHANE_NICKNAME,\r\n  data,\r\n}); // --> store.dispatch(changeNickname('mama muffin'))\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}