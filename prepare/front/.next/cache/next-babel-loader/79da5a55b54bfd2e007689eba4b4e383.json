{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  //로그인 시도 중.\n  isLoggingOut: false,\n  //로그아웃 시도 중.\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        isLoggingIn: true //내가 바꾸고 싶은 부분만 수정\n\n      });\n\n    case 'LOG_IN_SUCCESS':\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        isLoggingIn: false,\n        isLoggedIn: true,\n        //내가 바꾸고 싶은 부분만 수정\n        me: action.data\n      });\n\n    case 'LOG_IN_FAILURE':\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        isLoggingIn: false\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        isLoggingOut: true //내가 바꾸고 싶은 부분만 수정\n\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        isLoggingOut: false,\n        //내가 바꾸고 싶은 부분만 수정\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      //saga에서 action type name에 맞게 지정.\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //참조관계 유지\n        isLoggingOut: false //내가 바꾸고 싶은 부분만 수정\n\n      });\n\n    default:\n      return state;\n  }\n}; //login action creator\n\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data: data\n  };\n}; //logout action\n\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n}; //action creator //action은 객체임!!\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANE_NICKNAME',\n    data: data\n  };\n}; // --> store.dispatch(changeNickname('mama muffin'))\n\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingIn","isLoggingOut","me","signUpData","loginData","reducer","state","action","type","data","loginRequestAction","logoutRequestAction","changeNickname"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,WAAW,EAAE,KAFW;AAEJ;AACpBC,EAAAA,YAAY,EAAE,KAHU;AAGH;AACrBC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB;;AASP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,gBAAL;AAAuB;AACnB,6CACOF,KADP;AACc;AACVN,QAAAA,WAAW,EAAE,IAFjB,CAEuB;;AAFvB;;AAIJ,SAAK,gBAAL;AAAuB;AACnB,6CACOM,KADP;AACc;AACVN,QAAAA,WAAW,EAAE,KAFjB;AAGID,QAAAA,UAAU,EAAE,IAHhB;AAGsB;AAClBG,QAAAA,EAAE,EAAEK,MAAM,CAACE;AAJf;;AAMJ,SAAK,gBAAL;AAAuB;AACnB,6CACOH,KADP;AACc;AACVN,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAK,iBAAL;AACI,6CACOM,KADP;AACc;AACVL,QAAAA,YAAY,EAAE,IAFlB,CAEwB;;AAFxB;;AAIJ,SAAK,iBAAL;AAAwB;AACpB,6CACOK,KADP;AACc;AACVL,QAAAA,YAAY,EAAE,KAFlB;AAEyB;AACrBF,QAAAA,UAAU,EAAE,KAHhB;AAIIG,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAK,iBAAL;AAAwB;AACpB,6CACOI,KADP;AACc;AACVL,QAAAA,YAAY,EAAE,KAFlB,CAEyB;;AAFzB;;AAIJ;AACI,aAAOK,KAAP;AApCR;AAsCH,CAvCD,C,CAyCA;;;AACA,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAAU;AACxC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACH,IAAD,EAAU;AAC7B,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALD,C,CAKG;;;AAEH,eAAeJ,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedIn: false,\r\n    isLoggingIn: false, //로그인 시도 중.\r\n    isLoggingOut: false, //로그아웃 시도 중.\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {        \r\n        case 'LOG_IN_REQUEST': //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                isLoggingIn: true, //내가 바꾸고 싶은 부분만 수정\r\n            };\r\n        case 'LOG_IN_SUCCESS': //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                isLoggingIn: false,\r\n                isLoggedIn: true, //내가 바꾸고 싶은 부분만 수정\r\n                me: action.data,\r\n            };\r\n        case 'LOG_IN_FAILURE': //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                isLoggingIn: false,\r\n            };\r\n        case 'LOG_OUT_REQUEST':\r\n            return {\r\n                ...state, //참조관계 유지\r\n                isLoggingOut: true, //내가 바꾸고 싶은 부분만 수정\r\n            };\r\n        case 'LOG_OUT_SUCCESS': //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                isLoggingOut: false, //내가 바꾸고 싶은 부분만 수정\r\n                isLoggedIn: false,\r\n                me: null,\r\n            };\r\n        case 'LOG_OUT_FAILURE': //saga에서 action type name에 맞게 지정.\r\n            return {\r\n                ...state, //참조관계 유지\r\n                isLoggingOut: false, //내가 바꾸고 싶은 부분만 수정\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n//login action creator\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: 'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\n//logout action\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: 'LOG_OUT_REQUEST',\r\n    }\r\n}\r\n\r\n//action creator //action은 객체임!!\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type: 'CHANE_NICKNAME',\r\n        data\r\n    }\r\n}; // --> store.dispatch(changeNickname('mama muffin'))\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}