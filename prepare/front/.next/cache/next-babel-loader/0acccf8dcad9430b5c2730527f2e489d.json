{"ast":null,"code":"var _jsxFileName = \"/Users/beomso0/Desktop/godev/birdSns/prepare/front/components/FollowList.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { List, Button, Card } from 'antd';\nimport PropTypes from 'prop-types';\nimport { StopOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowList = ({\n  header,\n  data\n}) => {\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    dispatch({\n      type: UNFOLLOW_REQUEST\n    });\n  };\n\n  return __jsx(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, header),\n    loadMore: __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 72\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\")) // 실제로는 이 style 값들 최적화해줘야 함. styled or useMemo.\n    ,\n    bordered: true,\n    dataSource: data // --> 배열임.\n    ,\n    renderItem: item => // 여기에서 배열 data의 객체들이 반복되며 그려짐\n    __jsx(List.Item, {\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        onClick: onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 27\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  });\n};\n\nFollowList.propTypes = {\n  header: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default FollowList;","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/components/FollowList.js"],"names":["React","List","Button","Card","PropTypes","StopOutlined","useDispatch","UNFOLLOW_REQUEST","FollowList","header","data","dispatch","onClick","type","marginBottom","gutter","xs","md","textAlign","margin","item","marginTop","nickname","propTypes","string","isRequired","array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AACvC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,QAAMM,OAAO,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMR,MAAN,CAJV;AAKE,IAAA,QAAQ,EAAE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAvD,CALZ,CAKgG;AALhG;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAET,IAPd,CAOoB;AAPpB;AAQE,IAAA,UAAU,EAAGU,IAAD,IAAY;AACtB,UAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAC,MAAC,YAAD;AAAc,QAAA,GAAG,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAET,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,WAAW,EAAEQ,IAAI,CAACE,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkBD,CA1BD;;AA4BAd,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,MAAM,EAAEL,SAAS,CAACoB,MAAV,CAAiBC,UADJ;AAErBf,EAAAA,IAAI,EAAEN,SAAS,CAACsB,KAAV,CAAgBD;AAFD,CAAvB;AAKA,eAAejB,UAAf","sourcesContent":["import React from 'react';\r\nimport { List, Button, Card } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { StopOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowList = ({ header, data }) => {\r\n  const dispatch = useDispatch();\r\n  const onClick = () => {\r\n    dispatch({\r\n      type: UNFOLLOW_REQUEST,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <List\r\n      style={{ marginBottom: 20 }}\r\n      grid={{ gutter: 4, xs: 2, md: 3 }}\r\n      size=\"small\"\r\n      header={<div>{header}</div>}\r\n      loadMore={<div style={{ textAlign: 'center', margin: '10px 0' }}><Button>더 보기</Button></div>} // 실제로는 이 style 값들 최적화해줘야 함. styled or useMemo.\r\n      bordered\r\n      dataSource={data} // --> 배열임.\r\n      renderItem={(item) => ( // 여기에서 배열 data의 객체들이 반복되며 그려짐\r\n        <List.Item style={{ marginTop: 20 }}>\r\n          <Card actions={[<StopOutlined key=\"stop\" onClick={onClick} />]}>\r\n            <Card.Meta description={item.nickname} />\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nFollowList.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FollowList;\r\n"]},"metadata":{},"sourceType":"module"}