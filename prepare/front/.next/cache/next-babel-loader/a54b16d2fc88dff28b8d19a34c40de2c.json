{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/beomso0/Desktop/godev/birdSns/prepare/front/components/PostCardContent.js\";\n\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport shortId from 'shortid';\n\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  return (// '첫번째 게시글 #해시태그 #하이하이'\n    __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 3\n      }\n    }, postData.split(/(#[^\\s#]+)/g).map(function (v, i) {\n      if (v.match(/(#[^\\s#]+)/)) {\n        return __jsx(Link, {\n          href: \"/hashtag/\".concat(v.slice(1)),\n          key: shortId.generate(),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 16\n          }\n        }, __jsx(\"a\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 79\n          }\n        }, v));\n      }\n\n      return v;\n    }), \" \")\n  );\n};\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["/Users/beomso0/Desktop/godev/birdSns/prepare/front/components/PostCardContent.js"],"names":["Link","PropTypes","React","shortId","PostCardContent","postData","split","map","v","i","match","slice","generate","propTypes","string","isRequired"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAoB;AAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACC,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3C,UAAID,CAAC,CAACE,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACzB,eAAO,MAAC,IAAD;AAAM,UAAA,IAAI,qBAAcF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAd,CAAV;AAAsC,UAAA,GAAG,EAAER,OAAO,CAACS,QAAR,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIJ,CAAJ,CAA/D,CAAP;AACD;;AACD,aAAOA,CAAP;AACD,KALA,CADH;AADsB;AAAA,CAAxB;;KAAMJ,e;AAWNA,eAAe,CAACS,SAAhB,GAA4B;AAAER,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,MAAV,CAAiBC;AAA7B,CAA5B;AAEA,eAAeX,eAAf","sourcesContent":["import Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport shortId from 'shortid';\r\n\r\nconst PostCardContent = ({ postData }) => ( // '첫번째 게시글 #해시태그 #하이하이'\r\n  <div>\r\n    {postData.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n      if (v.match(/(#[^\\s#]+)/)) {\r\n        return <Link href={`/hashtag/${v.slice(1)}`} key={shortId.generate()}><a>{v}</a></Link>;\r\n      }\r\n      return v;\r\n    })} {/* / / 사이에 글자 넣으면 정규표현식 사용 가능. RegExr 유용함. 다양한 케이스 고려하는 것이 필수. */}\r\n  </div>\r\n);\r\n\r\nPostCardContent.propTypes = { postData: PropTypes.string.isRequired };\r\n\r\nexport default PostCardContent;\r\n"]},"metadata":{},"sourceType":"module"}